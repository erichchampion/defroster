rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isValidLocation(location) {
      return location is map
        && 'latitude' in location
        && 'longitude' in location
        && location.latitude is number
        && location.longitude is number
        && location.latitude >= -90
        && location.latitude <= 90
        && location.longitude >= -180
        && location.longitude <= 180;
    }

    function isValidSightingType(type) {
      return type in ['ICE', 'Army', 'Police'];
    }

    // Messages collection
    match /messages/{messageId} {
      // Allow anyone to read messages (public sightings)
      allow read: if true;

      // Only allow writes through Admin SDK (server-side)
      allow write: if false;

      // Validation rules (if we later allow client writes)
      // allow create: if isAuthenticated()
      //   && request.resource.data.keys().hasAll([
      //     'sightingType', 'location', 'timestamp',
      //     'senderLocation', 'geohash', 'expiresAt'
      //   ])
      //   && isValidSightingType(request.resource.data.sightingType)
      //   && isValidLocation(request.resource.data.location)
      //   && isValidLocation(request.resource.data.senderLocation)
      //   && request.resource.data.timestamp is int
      //   && request.resource.data.expiresAt is int
      //   && request.resource.data.geohash is string;
    }

    // Devices collection
    match /devices/{deviceToken} {
      // Never allow direct client access to devices
      // All operations must go through Admin SDK
      allow read: if false;
      allow write: if false;

      // If we need authenticated access later:
      // allow read: if isAuthenticated()
      //   && request.auth.token.device_token == deviceToken;
      // allow write: if isAuthenticated()
      //   && request.auth.token.device_token == deviceToken;
    }

    // Deny all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
